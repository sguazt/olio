<?xml version="1.0" encoding="UTF-8"?>
<webBenchmark>
    <!-- The definition binds the config file with the benchmark class -->
    <runConfig definition="com.sun.web20.driver.UIDriver">
        <!-- The hostConfig section is used by the harness to control hosts -->
        <hostConfig>
            <host>brazilian.sfbay</host>
        </hostConfig>
        <!-- The scale of the benchmark run, the driver definition
        defines the number of threads for each driver scale
        and each driver type. -->
        <scale>20</scale>
        <!-- The rampup, steadystate, and rampdown of the driver -->
        <runControl>
            <rampUp>60</rampUp>
            <steadyState>300</steadyState>
            <rampDown>30</rampDown>
        </runControl>
        <!-- The place where results are written -->
        <outputDir>/tmp/output</outputDir>
        <!-- Audit is a flag for benchmarks to audit results
        at the end of the run. It is not currently used
        and subject to change in the near future -->
        <audit>false</audit>
        <threadStart>
            <!-- The avg time between the start of each thread in
            an agent -->
            <delay>1000</delay>
            <!-- Whether the agents will wait until all threads to
            be up and then start the load all at once. If
            set to false, each thread will start executing the
            operations as soon as it is started. This will
            gradually load up the server. -->
            <simultaneous>false</simultaneous>
            <!-- Whether the agents will start up threads in parallel
            or not. If set to false, an agent will start all it's
            threads before the next agent gets to start the
            threads. The socket connection queue will be less
            loaded when it is set to false. -->
            <parallel>false</parallel>
        </threadStart>

        <!-- Stats collection. maxRunTime is in hours and is used only for
        benchmarks that are cycle controlled. In time-controlled
        benchmarks, the actual maxRunTime is calculated from the rampUp,
        stdyState, rampDown parameters. The interval is in seconds and
        applies to  throughput and response time graphs.
        The default is 30 seconds-->
        <stats>
            <maxRunTime>6</maxRunTime>
            <interval>30</interval>
        </stats>
        <!-- Run-time stats exposed or not and the interval to update
        the stats. A graphing package is required to display the
        real time stats. It is not yet integrated into Faban. -->
        <runtimeStats enabled="false">
            <interval>5</interval>
        </runtimeStats>

        <!-- The driver-specific config.  -->
        <driverConfig name="Web20Driver">
            <!-- The number of agents -->
            <agents>3</agents>
            <!-- The stats interval, overrides the ones specified for
            the benchmark. -->
            <stats>
                <interval>30</interval>
            </stats>
            <!-- Port to send the runtime stats. -->
            <runtimeStats target="9988"/>
            <properties>
                <!-- Demonstrates the different ways to specify properties -->
                <!-- The first way is a full name value pair, multiple
                values are supported, but only one name  -->
                <property>
                    <name>path1</name>
                    <value>webapp</value>
                </property>
                <!-- The second way is a little more compact while preserving
                the ability to set multiple values for a name -->
                <property name="path2">
                    <value>webapp/submission.jsp</value>
                </property>
               
            </properties>
            <operationMix>
                <name>MyOperation1</name>
                <r>0</r><r>70</r>
            </operationMix>
            <operationMix>
                <name>MyOperation2</name>
                <r>60</r><r>0</r>
            </operationMix>
            
        </driverConfig>
    </runConfig>
    <!-- This shows a way to set different configurations of resources outside
    the driver. Such parameters are generally used by the
    Faban Harness.-->
    <serverConfig>
        <host>129.145.130.85</host>
        <port>8080</port>
    </serverConfig>
</webBenchmark>
